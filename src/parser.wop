use crate::Sym::*;
use crate::Body;

alias "^" Sym::Lambda;
alias "." Sym::Body;
alias "(" Sym::OpenParen;
alias ")" Sym::CloseParen;
alias Ident Sym::Var;

EntryPoint: Body = Expression:&e -> { e.item.item }%;

Expression: Body = "(" Expression:&e ")" -> { e.item.item }% 
                   | "^" Ident:&i "." Expression:&e -> { Body::Abs(i.item.item, e.item.item.into()) }%
                   | Expression:&lhs Expression:&rhs -> { Body::App(lhs.item.item.into(), rhs.item.item.into()) }%
                   | Ident:&i -> { Body::Id(i.item.item[0] as usize) }&;
