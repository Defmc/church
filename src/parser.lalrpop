use crate::cci::Ast;
use crate::cci::ubody::UnprocessedBody;

grammar;

pub Expr: Box<Ast> = {
    "(" <a:App> ")" => a,
    Abs,
    Ident => Ast::Expr(UnprocessedBody::Var(<>.clone())).into()
};

pub Abs: Box<Ast> = {
    AbsPrefix <id:Ident> AbsBody "(" <a:App> ")" => Ast::Expr(UnprocessedBody::Abs(id, a.into_ubody())).into()
};

pub App: Box<Ast> = {
    <a:App> <e:Expr> => Ast::Expr(UnprocessedBody::App(a.into_ubody(), e.into_ubody())).into(),
    Expr,
};

pub Ident: String = {
    <s:r"[a-zA-Z_]\w*"> => s.to_string()
};

pub AbsPrefix: () = {
    <s:r"[Î»|\^|\\]"> => (),
};

pub AbsBody: () = {
    <s:r"\.|(->)"> => ()
};
